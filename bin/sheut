#!/usr/bin/env node

var argv = process.argv.slice(1),
    cwd =  argv.shift(),
    Sheut = require('../index'),
    gutil = require('gulp-util'),
    chalk = gutil.colors,
    pkg = require("../package.json"),
    commands = {
        accept: true,
        capture: true,
        clean: true,
        compare: true
    },
    configPath;

function error(err){
    gutil.log([chalk.red('Sheut Error'), err.message].join("\n"));
    process.exit(1);
}

function success(err){
    gutil.log(chalk.green(err.message));
}

function findCommand(argv) {
    var command = null;

    argv.forEach(function(name) {
        if (name.match(/--config=/)) {
            configPath = name.split('=')[1];
        }

        if (name.match(/--help/)) {
            help();
            return null;
        }

        if (name.match(/--version/)) {
            console.log(pkg.version);
            return null;
        }

        if (commands[name]) {
            command = name;
        }
    });

    return command;
}

function help() {
    console.log([
        "Commands: capture, accept, clean, compare, --help, --version",
        "Usage: sheut capture"
    ].join("\n"));
}

(function main() {
    if (!argv.length) return help();
    var command = findCommand(argv),
        sheut;

    if (command) {
        sheut = new Sheut(configPath);
        sheut[command]().then(success, error);
    } else {
        help();
    }
})();

